type: update
name: faasd
baseUrl: https://gitlab.hidora.com/softozor/hasura-jps/-/raw/master

settings:
  fields:
    - type: spacer
      caption: IAM Service
    - name: authApiKey
      caption: Auth API Key
      inputType: password
      type: string
      required: true
    - name: authUrl
      caption: Auth URL
      type: string
      required: true
    - type: spacer
      caption: Misc
    - name: fncTag
      caption: Docker tag
      type: string
      required: true
    - name: clusterType
      type: string
      required: true
    - type: spacer
      caption: Mail Server
    - name: mailServerHost
      caption: Host
      type: string
      required: true
    - type: spacer
      caption: Logs Aggregation
    - name: logsAggregatorHost
      caption: Host
      type: string
    - name: logsAggregatorPort
      caption: Port
      type: string

globals:
  MAIL_SERVER_API_PORT: 8025

onInstall:
  - installEngine
  - waitUntilEngineIsUp
  - pullTemplatesForFunctionDeployment
  - setCommonEnvVars
  - deployAuthFunctions
  - if ("${settings.clusterType}" == "dev"):
      - deployMailhogFunctions

actions:
  installEngine:
    - cmd[faas]:
        - git clone https://github.com/openfaas/faasd
        - cd faasd
        - ./hack/install.sh
  waitUntilEngineIsUp:
    - cmd[faas]:
        - while ! nc -z localhost 8080 ; do sleep 1 ; done
  pullTemplatesForFunctionDeployment:
    - cmd[faas]:
        - faas-cli template pull
        - faas-cli template pull https://gitlab.hidora.com/softozor/faas-templates.git
  setCommonEnvVars:
    - api:
        - method: environment.control.AddContainerEnvVars
          params:
            nodeGroup: faas
            vars:
              IMG_TAG: ${settings.fncTag}
              LOGS_AGGREGATOR_HOST: ${settings.logsAggregatorHost}
              LOGS_AGGREGATOR_PORT: ${settings.logsAggregatorPort}
  deployAuthFunctions:
    - api:
        - method: environment.control.AddContainerEnvVars
          params:
            nodeGroup: faas
            vars:
              AUTH_URL: ${settings.authUrl}
    - cmd[faas]:
        - cat /var/lib/faasd/secrets/basic-auth-password | faas-cli login -u admin --password-stdin
        - faas-cli secret create auth-secret --from-literal "${settings.authApiKey}"
        - wget -q ${baseUrl}/serverless/functions/fusionauth.yml
        - faas-cli deploy -f fusionauth.yml
  deployMailhogFunctions:
    - api:
        - method: environment.control.AddContainerEnvVars
          params:
            nodeGroup: faas
            vars:
              MAIL_SERVER_HOST: ${settings.mailServerHost}
              MAIL_SERVER_API_PORT: ${globals.MAIL_SERVER_API_PORT}
    - cmd[faas]:
        - cat /var/lib/faasd/secrets/basic-auth-password | faas-cli login -u admin --password-stdin
        - wget -q ${baseUrl}/serverless/functions/mailhog.yml
        - faas-cli deploy -f mailhog.yml

description: |
  We install faasd, a lightweight & portable faas engine.

success: serverless/successText.md

logo: https://raw.githubusercontent.com/openfaas/faasd/master/docs/media/social.png
homepage: https://github.com/openfaas/faasd
