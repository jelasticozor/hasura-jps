type: install
name: Jelasticozor infrastructure
baseUrl: http://gitlab.hidora.com/softozor/hasura-jps/-/raw/master

settings:
  fields:
    - type: spacer
      caption: SSL
    - name: useDefaultExternalDomain
      type: toggle
      caption: Use Default External Domain
      value: true
      hidden: false
      showIf:
        false:
          - name: externalDomains
            caption: External domain names (;-separated list)
            type: string
            vtype: domainlist
            required: true
    - type: spacer
      caption: Hasura
    - name: graphqlEngineImage
      caption: GraphQL Engine Image
      type: string
      default: softozor/graphql-engine:latest
    - name: enableHasuraConsole
      caption: Enable console
      type: checkbox
      value: true
    - name: useAutoGeneratedHasuraAdminSecret
      type: toggle
      caption: Auto-generate Admin Secret
      value: true
      hidden: false
      showIf:
        false:
          name: hasuraAdminSecret
          caption: Admin Secret
          type: string
          inputType: password
          required: true
    - type: spacer
      caption: Auth
    - name: fusionauthVersion
      caption: Fusionauth version
      type: string
      default: 1.30.1
    - name: useJelasticEmailAsAuthAdminEmail
      type: toggle
      caption: Use Jelastic Email
      value: true
      hidden: false
      showIf:
        false:
          name: authAdminEmail
          caption: Admin email
          type: string
          required: true
    - name: authIssuer
      caption: JWT issuer
      type: string
      default: your-company.com
    - type: spacer
      caption: Faas
    - name: fncTag
      caption: Faas Functions Image tag
      type: string
      default: latest
    - type: spacer
      caption: Mail server
    - name: useMailhog
      type: toggle
      caption: Use Dev Mail Server
      value: true
      hidden: false
      showIf:
        false:
          - name: mailServerHost
            caption: Host
            type: string
            required: true
          - name: mailServerPort
            caption: Port
            type: string
            required: true
          - name: mailServerUsername
            caption: Username
            type: string
            required: true
          - name: mailServerPassword
            caption: Password
            type: string
            inputType: password
            required: true
          - name: mailServerEnableSsl
            caption: Enable SSL
            type: toggle
            value: true

globals:
  # postgres
  DB_ADMIN_USERNAME: webadmin
  DB_NAME: hasura
  DB_USERNAME: hasura_user
  DB_PASSWORD: ${fn.password(20)}
  DB_AUTH_NAME: fusionauth
  DB_AUTH_USERNAME: auth
  DB_AUTH_PASSWORD: ${fn.password(20)}
  # hasura
  HASURA_SERVER_PORT: 8080
  HASURA_UNAUTHORIZED_ROLE: anonymous
  HASURA_ADMIN_SECRET_AUTO: ${fn.password(40)}
  HASURA_CLAIMS_NAMESPACE: https://hasura.io/jwt/claims
  # faas
  FAAS_PORT: 8080
  # auth
  AUTH_PORT: 9011
  AUTH_ADMIN_PASSWORD: ${fn.password(20)}
  DATA_PROTECTION_SECRET_KEY: ${fn.password(40)}
  ALMIGHTY_API_KEY: ${fn.password(40)}
  SERVERLESS_API_KEY: ${fn.password(40)}
  JWT_KEY_ALGORITHM: RS256
  JWT_KEY_SIZE: 2048

nodes:
- count: 1
  cloudlets: 4
  nodeGroup: bl
  nodeType: nginx-dockerized
- displayName: faasd
  count: 1
  cloudlets: 16
  nodeGroup: faas
  nodeType: docker
  image: softozor/ubuntu-git:latest
- displayName: database
  count: 2
  fixedCloudlets: 3
  cloudlets: 32
  nodeType: postgres13
  scalingMode: STATELESS
  password: ${fn.password}
  cluster: true
- displayName: api
  count: 1
  cloudlets: 32
  nodeGroup: cp
  nodeType: docker
  image: ${settings.graphqlEngineImage}
- displayName: auth
  count: 1
  cloudlets: 32
  nodeGroup: auth
  nodeType: docker
  image: fusionauth/fusionauth-app:${settings.fusionauthVersion}
skipNodeEmails: true

onInstall:
  - installMailServer
  # fusionauth uses the mail server
  - installFusionAuth
  # the faas engine uses fusionauth
  - installFaas
  # hasura uses the faas engine
  - installHasura
  # the load balancer uses hasura
  - installLoadBalancer
  # this is to set the right e-mail in the success text
  - getOptionalParams

actions:
  # caution: this method cannot be used before installMailServer has been called
  getOptionalParams:
    - script: |
        return {
          result: 0,
          externalDomains: ${settings.useDefaultExternalDomain} ? "${env.envName}.hidora.com" : "${settings.externalDomains}",
          email: ${settings.useJelasticEmailAsAuthAdminEmail} ? "${user.email}" : "${settings.authAdminEmail}",
          hasuraAdminSecret: ${settings.useAutoGeneratedHasuraAdminSecret} ? "${globals.HASURA_ADMIN_SECRET_AUTO}" : "${settings.hasuraAdminSecret}",
          mailServer: {
            host: ${settings.useMailhog} ? "${nodes.mail.master.intIP}" : "${settings.mailServerHost}",
            port: ${settings.useMailhog} ? "1025" : "${settings.mailServerPort}",
            username: ${settings.useMailhog} ? "" : "${settings.mailServerUsername}",
            password: ${settings.useMailhog} ? "" : "${settings.mailServerPassword}",
            enableSsl: ${settings.useMailhog} ? "False" : "True"
          }
        };
  installMailServer:
    if (${settings.useMailhog}):
      install:
        jps: mailhog/manifest.yml
  installFaas:
    install:
      jps: serverless/manifest.yml
      settings:
        authApiKey: ${globals.SERVERLESS_API_KEY}
        authUrl: http://${nodes.auth.master.intIP}:${globals.AUTH_PORT}
        dataProtectionSecretKey: ${globals.DATA_PROTECTION_SECRET_KEY}
        fncTag: ${settings.fncTag}
  installHasura:
    - getOptionalParams
    - install:
        jps: hasura/manifest.yml
        settings:
          dbAdminUsername: ${globals.DB_ADMIN_USERNAME}
          dbAdminPassword: ${nodes.sqldb.password}
          dbUsername: ${globals.DB_USERNAME}
          dbPassword: ${globals.DB_PASSWORD}
          dbName: ${globals.DB_NAME}
          enableConsole: ${settings.enableHasuraConsole}
          adminSecret: ${response.hasuraAdminSecret}
          unauthorizedRole: ${globals.HASURA_UNAUTHORIZED_ROLE}
          serverPort: ${globals.HASURA_SERVER_PORT}
          faasHostname: ${nodes.faas.master.intIP}
          faasPort: ${globals.FAAS_PORT}
          hasuraClaimsNamespace: ${globals.HASURA_CLAIMS_NAMESPACE}
          authAlmightyApiKey: ${globals.ALMIGHTY_API_KEY}
          authPort: ${globals.AUTH_PORT}
          authIssuer: ${settings.authIssuer}
          jwtKeyAlgorithm: ${globals.JWT_KEY_ALGORITHM}
  installLoadBalancer:
    - getOptionalParams
    - install:
        jps: bl/manifest.yml
        settings:
          externalDomains: ${response.externalDomains}
  installFusionAuth:
    - getOptionalParams
    - install:
        jps: fusionauth/manifest.yml
        settings:
          databaseName: ${globals.DB_AUTH_NAME}
          databaseRootUsername: ${globals.DB_ADMIN_USERNAME}
          databaseRootPassword: ${nodes.sqldb.password}
          databaseUsername: ${globals.DB_AUTH_USERNAME}
          databasePassword: ${globals.DB_AUTH_PASSWORD}
          appRunTime: production
          searchType: database
          adminEmail: ${response.email}
          adminPassword: ${globals.AUTH_ADMIN_PASSWORD}
          issuer: ${settings.authIssuer}
          almightyApiKey: ${globals.ALMIGHTY_API_KEY}
          serverlessApiKey: ${globals.SERVERLESS_API_KEY}
          mailServerHost: ${response.mailServer.host}
          mailServerPort: ${response.mailServer.port}
          mailServerUsername: ${response.mailServer.username}
          mailServerPassword: ${response.mailServer.password}
          mailServerEnableSsl: ${response.mailServer.enableSsl}
          fromEmail: no-reply@${settings.authIssuer}
          fromName: ${settings.authIssuer}
          hasuraClaimsNamespace: ${globals.HASURA_CLAIMS_NAMESPACE}
          jwtKeyAlgorithm: ${globals.JWT_KEY_ALGORITHM}
          jwtKeySize: ${globals.JWT_KEY_SIZE}

# TODO: add url to mailhog
success:
  text: |
    **Hasura Console**: [${env.protocol}://${env.domain}/](${env.protocol}://${env.domain}/)  
    **Hasura Admin Secret**: ${response.hasuraAdminSecret}  
    **Auth Admin Panel**: [${nodes.auth.master.url}](${nodes.auth.master.url})  
    **Database Admin Panel**: [${nodes.sqldb.master.url}](${nodes.sqldb.master.url})  
    **Database Admin User**: ${globals.DB_ADMIN_USERNAME}  
    **Database Admin Password**: ${nodes.sqldb.password}  
    **Hasura Database Name**: ${globals.DB_NAME}  
    **Hasura Database Username**: ${globals.DB_USERNAME}  
    **Hasura Database Password**: ${globals.DB_PASSWORD}  
    **Auth Database Name**: ${globals.DB_AUTH_NAME}  
    **Auth Database Username**: ${globals.DB_AUTH_USERNAME}  
    **Auth Database Password**: ${globals.DB_AUTH_PASSWORD}  
    **Auth Admin Email**: ${response.email}  
    **Auth Admin Password**: ${globals.AUTH_ADMIN_PASSWORD}  
    **Auth Almighty API Key**: ${globals.ALMIGHTY_API_KEY}  
    **Auth Serverless API Key**: ${globals.SERVERLESS_API_KEY}  
    **Data Protection Secret Key**: ${globals.DATA_PROTECTION_SECRET_KEY}