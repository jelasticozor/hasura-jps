stages:
  - test
  - publish-docker
  - review
  - report

variables:
  DOTNET_VERSION: "6.0"
  GIT_SUBMODULE_STRATEGY: recursive
  PACKAGE_SOURCE_NAME: softozor-packages-gitlab
  TEST_IMAGE_NAME: softozor/hasura-jps-test

.docker-login: &docker-login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.docker-push: &docker-push
  - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
  - docker push $DOCKER_IMAGE:latest

.publish-faas-functions: &publish-faas-functions
  stage: publish-docker
  image: softozor/faas-cli:${TOOLS_SHA}
  before_script:
    - *docker-login
  script:
    - cd $PATH_TO_FUNCTIONS
    - IMG_TAG=${CI_COMMIT_SHORT_SHA} faas-cli build -f ./${FAAS_CONFIG}.yml
    - IMG_TAG=${CI_COMMIT_SHORT_SHA} faas-cli push -f ./${FAAS_CONFIG}.yml
    - IMG_TAG=latest faas-cli build -f ./${FAAS_CONFIG}.yml
    - IMG_TAG=latest faas-cli push -f ./${FAAS_CONFIG}.yml

dotnet-tests:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:${DOTNET_VERSION}-alpine-amd64
  variables:
    CONFIGURATION: Release
  before_script:
    - dotnet nuget add source "${CI_API_V4_URL}/projects/198/packages/nuget/index.json" --name ${PACKAGE_SOURCE_NAME}
  script:
    - dotnet test -c ${CONFIGURATION} --logger:"junit;LogFilePath=.\test-reports\test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose" ./HasuraJps.sln
  artifacts:
    reports:
      junit:
        - serverless/functions/*.Tests/test-reports/*.xml
    paths:
      - serverless/functions/*.Tests/test-reports/*.xml
  only:
    changes:
      - serverless/functions/**/*

publish-feature-test-image:
  stage: publish-docker
  image: docker:latest
  variables:
    DOCKER_IMAGE: ${TEST_IMAGE_NAME}
    DOCKERFILE_FOLDER: ./ci/feature-tests
  before_script:
    - *docker-login
  script:
    - |
      docker build $DOCKERFILE_FOLDER -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA -t $DOCKER_IMAGE:latest \
        --build-arg FAAS_CLI_VERSION=${FAAS_CLI_VERSION} \
        --build-arg HASURA_CLI_VERSION=${HASURA_CLI_VERSION}
    - *docker-push
  only:
    changes:
      - ci/feature-tests/*

publish-faas-image:
  stage: publish-docker
  image: docker:latest
  variables:
    DOCKER_IMAGE: softozor/ubuntu-git
    DOCKERFILE_FOLDER: ./ci/ubuntu
  before_script:
    - *docker-login
  script:
    - docker build $DOCKERFILE_FOLDER -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA -t $DOCKER_IMAGE:latest
    - *docker-push
  only:
    refs:
      - master
    changes:
      - ci/ubuntu/Dockerfile

publish-test-faas-functions:
  <<: *publish-faas-functions
  variables:
    FAAS_CONFIG: faas
    PATH_TO_FUNCTIONS: features/data/functions
  only:
    refs:
      - master
    changes:
      - features/data/functions/**/*

publish-fusionauth-functions:
  <<: *publish-faas-functions
  variables:
    FAAS_CONFIG: fusionauth
    PATH_TO_FUNCTIONS: serverless/functions

acceptance-test:
  stage: review
  image: ${TEST_IMAGE_NAME}:latest
  before_script:
    # this hack is necessary to allow for a call to faas-cli deploy later in the test that
    # is not done from within the features/data/functions folder but from the project root
    # instead
    - faas-cli template pull
    - faas-cli template pull http://${CI_SERVER_HOST}/softozor/faas-templates.git
  script:
    - |
      behave --junit --junit-directory ./features/test-reports --tags ~wip \
        -D project-root-folder="${CI_PROJECT_DIR}" \
        -D api-url="${JELASTIC_API_URL}" \
        -D api-token="${JELASTIC_ACCESS_TOKEN}" \
        -D commit-sha="${CI_COMMIT_SHORT_SHA}" \
        -D base-url="http://${CI_SERVER_HOST}/${CI_PROJECT_PATH}/-/raw/${CI_COMMIT_REF_NAME}" \
        -D hasura-version="${HASURA_CLI_VERSION}" \
        -D fusionauth-version="${FUSIONAUTH_VERSION}"
  artifacts:
    reports:
      junit:
        - ./features/test-reports/*.xml
    paths:
      - ./features/test-reports/*.xml

publish-pickles:
  stage: report
  image: softozor/pickles:2.21.1
  variables:
    APPLICATION_NAME: hasura-jps
    OUTPUT_DIR: ./pickles
  script:
    - |
      mono /pickles/Pickles.exe --feature-directory=. \
        --output-directory=${OUTPUT_DIR} \
        --system-under-test-name=${APPLICATION_NAME} \
        --system-under-test-version=$CI_COMMIT_SHORT_SHA \
        --documentation-format=dhtml \
        --language=en --exp --et 'wip' --enableComments=false
  artifacts:
    paths:
      - $OUTPUT_DIR