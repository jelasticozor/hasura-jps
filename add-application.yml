type: update
name: Add Application To Hasura
baseUrl: http://gitlab.hidora.com/softozor/hasura-jps/-/raw/master

settings:
  fields:
    - type: spacer
      caption: Application
    - name: appName
      caption: Name
      type: string
      required: true
    - name: appRoles
      caption: Roles (";"-separated list; first is default)
      type: string
      required: true
    - name: appId
      caption: Id
      type: string
      regex: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
    - type: spacer
      caption: Fusionauth
    - name: almightyApiKey
      caption: Almighty API Key
      type: string
      inputType: password
      required: true

globals:
  ENV_VAR_NAME: HASURA_GRAPHQL_JWT_SECRET

onInstall:
  - cmd[auth]:
      - wget ${baseUrl}/fusionauth/create_application.py -O create_application.py
  - cmd[auth]: |-
      python3 ./create_application.py --api-url "http://localhost:9011" \
        --api-key "${settings.almightyApiKey}" \
        --app-name "${settings.appName}" \
        --app-id "${settings.appId}" \
        --roles "${settings.appRoles}"
  - script: |
      const appId = "${response.out}"

      const resp = jelastic.environment.control.GetContainerEnvVarsByGroup({
        envName: '${env.appid}',
        session: session,
        nodeGroup: 'cp'
      })

      if (resp.result != 0) return resp

      const variablesDict = resp.object;
      if (!("${globals.ENV_VAR_NAME}" in variablesDict)) {
        return {
          result: 1,
          errOut: "variable ${globals.ENV_VAR_NAME} not found in the set of environment variables on 'cp' nodegroup: " + variablesDict
        }
      }

      const value = JSON.parse(variablesDict["${globals.ENV_VAR_NAME}"])

      value["audience"].push(appId)

      const vars = {
        "${globals.ENV_VAR_NAME}": value
      }

      jelastic.environment.control.AddContainerEnvVars({
        envName: '${env.appid}',
        session: session,
        nodeGroup: 'cp',
        vars: JSON.stringify(vars)
      })
  - restartContainers[cp]