type: update
name: hasura

baseUrl: http://gitlab.hidora.com/softozor/hasura-jps/-/raw/master

settings:
  fields:
    - type: spacer
      caption: Faas
    - name: faasHostname
      caption: Hostname
      type: string
      required: true
    - name: faasPort
      caption: Port
      type: string
      required: true
    - type: spacer
      caption: Database
    - name: dbAdminUsername
      caption: Admin username
      type: string
      required: true
    - name: dbAdminPassword
      caption: Admin password
      type: string
      inputType: password
      required: true
    - name: dbUsername
      caption: Database username
      type: string
      required: true
    - name: dbPassword
      caption: Database password
      type: string
      inputType: password
      required: true
    - name: dbName
      caption: Database name
      type: string
      required: true
    - type: spacer
      caption: Auth
    - name: authAlmightyApiKey
      caption: Almighty API Key
      type: string
      inputType: password
      required: true
    - name: authPort
      caption: Auth Port
      type: string
      required: true
    - name: authIssuer
      caption: Auth Issuer
      type: string
      required: true
    - type: spacer
      caption: Hasura
    - name: enableConsole
      caption: Enable console
      type: checkbox
      value: true
    - name: adminSecret
      caption: Admin secret
      type: string
      inputType: password
      required: true
    - name: unauthorizedRole
      caption: Unauthorized role
      type: string
      default: anonymous
    - name: serverPort
      caption: Server port
      type: string
      default: 8080
    - name: hasuraClaimsNamespace
      caption: Claims Namespace
      type: string
      default: https://hasura.io/jwt/claims

onInstall:
  - installTools
  - setupDatabase
  - setupAppContainer
  - restartContainers[cp]

actions:
  # TODO: this is only needed for the hack to get the key and type from fusionauth in setupAppContainer
  installTools:
    - cmd[cp]:
        - apt update && apt install -y jq
  setupDatabase:
    - cmd[${nodes.sqldb.master.id}]:
        - export PGPASSWORD=${settings.dbAdminPassword}
        - psql -U ${settings.dbAdminUsername} -d postgres -c "CREATE USER ${settings.dbUsername} PASSWORD '${settings.dbPassword}';"
        - psql -U ${settings.dbAdminUsername} -d postgres -c "CREATE DATABASE ${settings.dbName} OWNER ${settings.dbUsername} ENCODING 'utf-8' TEMPLATE template0;"
        - wget --quiet ${baseUrl}/hasura/setup.sql -O setup.sql
        - sed -i s/DATABASE_USER/${settings.dbUsername}/g setup.sql
        - psql -U ${settings.dbAdminUsername} -d ${settings.dbName} -f setup.sql
  setupAppContainer:
    # TODO: make the algorithm a settings parameter!
    - forEach(nodes.cp):
        - api:
            - method: environment.control.SetContainerEnvVars
              params:
                nodeId: ${@i.id}
                vars:
                  HASURA_GRAPHQL_DATABASE_URL: postgres://${settings.dbUsername}:${settings.dbPassword}@${nodes.sqldb.master.intIP}:5432/${settings.dbName}
                  HASURA_GRAPHQL_ENABLE_CONSOLE: ${settings.enableConsole}
                  HASURA_GRAPHQL_ADMIN_SECRET: ${settings.adminSecret}
                  HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${settings.unauthorizedRole}
                  HASURA_GRAPHQL_SERVER_PORT: ${settings.serverPort}
                  FAAS_HOSTNAME: ${settings.faasHostname}
                  FAAS_PORT: ${settings.faasPort}
                  # TODO: get the type from the settings!
                  HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS256", "jwk_url": "http://${nodes.auth.master.intIP}:${settings.authPort}/.well-known/jwks.json", "audience": [], "claims_namespace": "${settings.hasuraClaimsNamespace}", "claims_format": "json", "issuer": "${settings.authIssuer}"}'